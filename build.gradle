buildscript {
    repositories {
        jcenter()
        maven {
            url 'http://xbib.org/repository'
        }
    }
    dependencies {
        classpath "org.xbib.elasticsearch:gradle-plugin-elasticsearch-build:6.3.2.1"
    }
}

import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

plugins {
    id "org.sonarqube" version "2.6.1"
    id "io.codearte.nexus-staging" version "0.11.0"
    id "com.palantir.docker" version "0.20.1"
    id "org.xbib.gradle.plugin.rpm" version "1.0.1"
    id "org.xbib.gradle.plugin.asciidoctor" version "1.5.6.0.1"
}

printf "Date: %s\nHost: %s\nOS: %s %s %s\nJVM: %s %s %s %s\nGradle: %s Groovy: %s Java: %s\n" +
        "Build: group: ${project.group} name: ${project.name} version: ${project.version}\n",
        ZonedDateTime.now().format(DateTimeFormatter.ISO_DATE_TIME),
        InetAddress.getLocalHost(),
        System.getProperty("os.name"),
        System.getProperty("os.arch"),
        System.getProperty("os.version"),
        System.getProperty("java.version"),
        System.getProperty("java.vm.version"),
        System.getProperty("java.vm.vendor"),
        System.getProperty("java.vm.name"),
        gradle.gradleVersion, GroovySystem.getVersion(), JavaVersion.current()

ext {
    user = 'jprante'
    name = 'elasticsearch-xbib'
    description = 'Elasticsearch'
    esmodules = [
            'elasticsearch-analysis-common',
            'transport-netty4'
    ]
    esplugins = [
            'elasticsearch-plugin-bundle'
    ]
}

apply plugin: "io.codearte.nexus-staging"

configure(allprojects.findAll { it.name in rootProject.esmodules }) {
    apply plugin: 'org.xbib.gradle.plugin.elasticsearch.plugin'
    configurations {
        esdist
    }
    artifacts {
        esdist bundlePlugin
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'org.xbib.gradle.plugin.asciidoctor'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    task injectGradleProperties(type: Copy) {
        from rootProject.file('gradle.properties')
        into 'build/resources/main'
        expand([
                'timestamp': new Date().format('yyyyMMddHHmmss')
        ])
    }
    processResources.finalizedBy injectGradleProperties

    apply from: rootProject.file('gradle/publish.gradle')
    apply from: rootProject.file('gradle/sourcequality.gradle')
}

asciidoctor {
    attributes toc: 'left',
            doctype: 'book',
            icons: 'font',
            encoding: 'utf-8',
            sectlink: true,
            sectanchors: true,
            linkattrs: true,
            imagesdir: 'img',
            'source-highlighter': 'coderay'
}
