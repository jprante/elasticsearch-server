buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://xbib.org/repository'
        }
    }
    dependencies {
        classpath "org.xbib.elasticsearch:gradle-plugin-elasticsearch-build:${project.property('elasticsearch-devkit-gradle-plugins.version')}"
        classpath "org.xbib.gradle.plugin:gradle-plugin-shadow:1.1.1"
        classpath "org.xbib.gradle.plugin:gradle-plugin-git:1.0.0"
    }
}

plugins {
    id "org.sonarqube" version "2.6.1"
    id "io.codearte.nexus-staging" version "0.11.0"
    id "org.xbib.gradle.plugin.rpm" version "1.1.0"
    id "org.xbib.gradle.plugin.asciidoctor" version "1.6.0.1"
}

apply plugin: "java"
apply plugin: "io.codearte.nexus-staging"
apply plugin: 'org.xbib.gradle.plugin.asciidoctor'

repositories {
    jcenter()
    maven {
        url 'https://xbib.org/repository'
    }
}

task banner {
    doFirst {
        printf "Host: %s\nOS: %s %s %s\nJVM: %s %s %s %s\nGradle: %s Groovy: %s Java: %s\n" +
                "Build: group: ${project.group} name: ${project.name} version: ${project.version}\n",
                InetAddress.getLocalHost(),
                System.getProperty("os.name"),
                System.getProperty("os.arch"),
                System.getProperty("os.version"),
                System.getProperty("java.version"),
                System.getProperty("java.vm.version"),
                System.getProperty("java.vm.vendor"),
                System.getProperty("java.vm.name"),
                gradle.gradleVersion,
                GroovySystem.getVersion(),
                JavaVersion.current()
        if (!JavaVersion.current().java11Compatible) {
            println "WARNING: no Java 11 found. You will run into problems."
        }
    }
}

tasks.compileJava.dependsOn('banner')

ext {
    user = 'jprante'
    name = 'elasticsearch-server'
    description = 'Elasticsearch server'
    esmodules = [
            'elasticsearch-analysis-common',
            'transport-netty4'
    ]
    esplugins = [
            'elasticsearch-plugin-bundle'
    ]
}

configure(allprojects.findAll { it.name in rootProject.esmodules }) {
    apply plugin: 'org.xbib.gradle.plugin.elasticsearch.plugin'
    configurations {
        esdist
    }
    artifacts {
        esdist bundlePlugin
    }
}

configure(allprojects.findAll { it.name in rootProject.esplugins }) {
    apply plugin: 'org.xbib.gradle.plugin.elasticsearch.plugin'
    configurations {
        esdist
    }
    artifacts {
        esdist bundlePlugin
    }
}

subprojects {

    apply plugin: 'java'

    compileJava {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
    compileTestJava {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
    
    apply from: rootProject.file('gradle/sourcequality.gradle')
}

asciidoctor {
    sourceDir rootProject.file('docs/asciidoc')
    attributes toc: 'left',
            doctype: 'book',
            icons: 'font',
            encoding: 'utf-8',
            sectlink: true,
            sectanchors: true,
            linkattrs: true,
            imagesdir: 'img',
            'source-highlighter': 'coderay'
}

