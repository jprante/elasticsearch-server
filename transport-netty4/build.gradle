apply plugin: 'signing'

import java.time.ZoneOffset
import java.time.ZonedDateTime

esplugin {
    url 'https://github.com/jprante/elasticsearch-server'
    description 'Netty 4 based transport module'
    classname 'org.elasticsearch.transport.netty4.Netty4Plugin'
}

dependencies {
    compile "org.xbib.elasticsearch:netty:${property('elasticsearch-libs.version')}"
    testCompile project(':server')
    testCompile "org.xbib.elasticsearch:mocksocket:${property('elasticsearch-libs.version')}"
}

afterEvaluate {
    compileJava {
        inputs.property("moduleName", 'org.xbib.elasticsearch.transport.nettyfour')
        doFirst {
            options.compilerArgs = [
                    "-Xlint:-try",
                    '--module-path', classpath.asPath

            ]
            classpath = files()
        }
    }
    compileTestJava {
        inputs.property("moduleName", 'org.xbib.elasticsearch.transport.nettyfour.test')
        doFirst {
            options.compilerArgs = [
                    "-Xlint:-cast,-deprecation,-rawtypes,-try,-unchecked",
                    "-proc:none",
                    '--module-path', classpath.asPath
            ]
            classpath = files()
        }
    }
    javadoc {
        enabled = true
        inputs.property("moduleName", 'org.xbib.elasticsearch.transport.nettyfour')
        doFirst {
            options.addStringOption('-module-path', classpath.asPath)
            classpath = files()
        }
    }
    jar {
        inputs.property("moduleName", 'org.xbib.elasticsearch.transport.nettyfour')
        manifest {
            attributes(
                    'Implementation-Title': "${project.group}#${project.name};${project.version}",
                    'Implementation-Version': version,
                    'Implementation-Vendor': "${user}",
                    'Build-Date': ZonedDateTime.now(ZoneOffset.UTC),
                    'Build-Java-Version': System.getProperty("java.version"),
                    'X-Compile-Source-JDK': compileJava.targetCompatibility,
                    'X-Compile-Target-JDK': compileJava.sourceCompatibility,
                    'X-Compile-Elasticsearch-Version': version,
                    'X-Compile-Lucene-Version': project.property('lucene.version'),
                    'X-Compile-Elasticsearch-Snapshot': false
            )
        }
    }
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign jar
    sign sourcesJar
    sign javadocJar
}

dependencyLicenses {
  mapping from: /netty-.*/, to: 'netty'
}

test {
    enabled = false
}

randomizedTest {
    enabled = false
}

esTest {
    enabled = false
    /*
     * We have to disable setting the number of available processors as tests in the same JVM randomize processors
      * and will step on each other if we allow them to set the number of available processors as it's set-once in Netty.
     */
    systemProperty 'es.set.netty.runtime.available.processors', 'false'
}

integTest {
    //  plugin 'transport-netty4' cannot be installed as a plugin, it is a system module
    enabled = false
}

integTestRunner {
    enabled = false
    systemProperty 'es.set.netty.runtime.available.processors', 'false'
}

thirdPartyAudit {
    enabled = true
    excludes = [
            // classes are missing

            'com.google.protobuf.ExtensionRegistry',
            'com.google.protobuf.ExtensionRegistryLite',
            'com.google.protobuf.MessageLite$Builder',
            'com.google.protobuf.MessageLite',
            'com.google.protobuf.MessageLiteOrBuilder',
            'com.google.protobuf.Parser',
            'com.google.protobuf.nano.CodedOutputByteBufferNano',
            'com.google.protobuf.nano.MessageNano',

            'com.jcraft.jzlib.Deflater',
            'com.jcraft.jzlib.Inflater',
            'com.jcraft.jzlib.JZlib$WrapperType',
            'com.jcraft.jzlib.JZlib',

            'com.ning.compress.BufferRecycler',
            'com.ning.compress.lzf.ChunkDecoder',
            'com.ning.compress.lzf.ChunkEncoder',
            'com.ning.compress.lzf.LZFEncoder',
            'com.ning.compress.lzf.util.ChunkDecoderFactory',
            'com.ning.compress.lzf.util.ChunkEncoderFactory',

            'io.netty.internal.tcnative.Buffer',
            'io.netty.internal.tcnative.CertificateRequestedCallback',
            'io.netty.internal.tcnative.CertificateVerifier',
            'io.netty.internal.tcnative.Library',
            'io.netty.internal.tcnative.SSL',
            'io.netty.internal.tcnative.SSLContext',
            'io.netty.internal.tcnative.SessionTicketKey',
            'io.netty.internal.tcnative.SniHostNameMatcher',

            'lzma.sdk.lzma.Encoder',
            'net.jpountz.lz4.LZ4Compressor',
            'net.jpountz.lz4.LZ4Factory',
            'net.jpountz.lz4.LZ4FastDecompressor',
            'net.jpountz.xxhash.StreamingXXHash32',
            'net.jpountz.xxhash.XXHashFactory',

            'org.apache.commons.logging.Log',
            'org.apache.commons.logging.LogFactory',
            'org.apache.log4j.Level',
            'org.apache.log4j.Logger',
            'org.apache.logging.log4j.Level',
            'org.apache.logging.log4j.LogManager',
            'org.apache.logging.log4j.Logger',
            'org.apache.logging.log4j.spi.ExtendedLoggerWrapper',

            'org.bouncycastle.asn1.x500.X500Name',
            'org.bouncycastle.cert.X509v3CertificateBuilder',
            'org.bouncycastle.cert.jcajce.JcaX509CertificateConverter',
            'org.bouncycastle.cert.jcajce.JcaX509v3CertificateBuilder',
            'org.bouncycastle.jce.provider.BouncyCastleProvider',
            'org.bouncycastle.operator.jcajce.JcaContentSignerBuilder',

            'org.conscrypt.AllocatedBuffer',
            'org.conscrypt.BufferAllocator',
            'org.conscrypt.Conscrypt',
            'org.conscrypt.HandshakeListener',

            'org.eclipse.jetty.alpn.ALPN$ClientProvider',
            'org.eclipse.jetty.alpn.ALPN$ServerProvider',
            'org.eclipse.jetty.alpn.ALPN',
            'org.eclipse.jetty.npn.NextProtoNego$ClientProvider',
            'org.eclipse.jetty.npn.NextProtoNego$ServerProvider',
            'org.eclipse.jetty.npn.NextProtoNego',

            'org.jboss.marshalling.ByteInput',
            'org.jboss.marshalling.ByteOutput',
            'org.jboss.marshalling.Marshaller',
            'org.jboss.marshalling.MarshallerFactory',
            'org.jboss.marshalling.MarshallingConfiguration',
            'org.jboss.marshalling.Unmarshaller',

            'org.slf4j.Logger',
            'org.slf4j.LoggerFactory',

            // violations
            'io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator',
            'io.netty.util.internal.PlatformDependent0',
            'io.netty.util.internal.PlatformDependent0$1',
            'io.netty.util.internal.PlatformDependent0$2',
            'io.netty.util.internal.PlatformDependent0$3',
            'io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueConsumerNodeRef',
            'io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef',
            'io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields',
            'io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields',
            'io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields',
            'io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode',
            'io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField',
            'io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField',
            'io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField',
            'io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess',
            'io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess'
    ]
}
