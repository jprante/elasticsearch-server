apply plugin: 'signing'

dependencies {
    testCompileOnly "org.xbib.elasticsearch:elasticsearch:${project.property('elasticsearch-server.version')}"
}

afterEvaluate {
    compileJava {
        inputs.property("moduleName", 'org.xbib.elasticsearch.analysis.common')
        doFirst {
            options.compilerArgs = [
                    '--module-path', classpath.asPath
            ]
            classpath = files()
        }
    }
    compileTestJava {
        inputs.property("moduleName", 'org.xbib.elasticsearch.analysis.common.test')
        doFirst {
            options.compilerArgs = [
                    '--module-path', classpath.asPath
            ]
            classpath = files()
        }
    }
    javadoc {
        inputs.property("moduleName", 'org.xbib.elasticsearch.analysis.common')
        doFirst {
            options.addStringOption('-module-path', classpath.asPath)
            classpath = files()
        }
    }
}

clean {
    delete fileTree('.') { include '.local*.log' }
}

esplugin {
    description 'Common analyzers for Elasticsearch'
    url 'https://github.com/jprante/elasticsearch-devkit/elasticsearch-analysis-common'
    classname 'org.xbib.elasticsearch.analysis.common/org.elasticsearch.analysis.common.CommonAnalysisPlugin'
}

dependencyLicenses.enabled = false

// do not run junit tests
test.enabled = false

// do not run randomized tests
randomizedTest.enabled = false

// run Elasticsearch tests
esTest {
    enabled = true
    systemProperty 'tests.logger.level', 'ALL'
    systemProperty 'tests.security.manager', 'false'
    //systemProperty 'java.security.debug', 'access,failure'
}

integTest {
    enabled = false // 0 Tests
}

configurations {
    archives
}

artifacts {
    archives jar, testJar, sourcesJar, javadocJar, bundlePlugin
}

signing {
    sign bundlePlugin, testJar
}

apply from: "${rootProject.projectDir}/gradle/publish.gradle"
